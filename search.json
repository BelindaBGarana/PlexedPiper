[{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos.html","id":"data-source","dir":"Articles","previous_headings":"","what":"Data source","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data.\n","text":"vignette demonstrates processing usign PNNL’s DMS data source. PNNL DMS based MS SQL Server. Typically data organized data packages according experiments. Data package contains phospho data mirroring PlexedPiperTestData number 3626. Smaller version data package, suggested testing purposes 3625.","code":"data_package_num <- 3625 # if there is no connection to PNNL DMS, vignette is not compiled if(!is_PNNL_DMS_connection_successful()){   message(\"There is no connection to PNNL DMS. This code in this vignette won't be evaluated.\")   knitr::opts_chunk$set(eval = FALSE) }"},{"path":[]},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos.html","id":"read-the-ms-gf-output","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Read the MS-GF+ output","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data.\n","text":"First step determine MS-GF+ jobs using data package number. simply reads parsed text output MS-GF+ search engine. text files collated together resulting data.frame used create MSnID object. Phospho dataset involve Ascore jobs improving phospho-site localization. one Ascore job per data package. fetched object data.frame links datasets, scans original PTM localization newly suggested locations. Importantly contains AScore column signifies confidence PTM assingment. AScore > 17 considered confident. Remove non-phospho. Need sure phospho symbol *! FDR filter peptide level. Remapping IDs RefSeq gene symbols MSnID object FASTA file use search. Double checking FASTA file. Note, case multiple RefSeq mapping gene, picked RefSeq entry longest sequence. Unfortunately, unlike UniProt, RefSeq report, sequence considered canonical. resolve ambiguity resort protein length. Mapping sites protein sequence. lot cases easier handle interpret example, Hrc-T379t, rather peptide sequence D.DDDNDGGST*ENVHQAHR.H .","code":"msnid <- read_msgf_data_from_DMS(data_package_num) show(msnid) ascore <- get_AScore_results(data_package_num) msnid <- best_PTM_location_by_ascore(msnid, ascore) msnid <- apply_filter(msnid, \"grepl(\\\"\\\\\\\\*\\\", peptide)\") msnid <- filter_msgf_data_peptide_level(msnid, 0.01) conv_tbl <- fetch_conversion_table(organism_name = \"Rattus norvegicus\",                                    from = \"REFSEQ\", to = \"SYMBOL\")  msnid <- remap_accessions_refseq_to_gene(msnid,                                          conversion_table = conv_tbl)  # Remove missing accessions psms(msnid) <- dplyr::filter(psms(msnid), !is.na(accession))  fst_dms_pth <- path_to_FASTA_used_by_DMS(data_package_num) fst_dms_pth_2 <- remap_accessions_refseq_to_gene_fasta(   fst_dms_pth, conversion_table = conv_tbl ) library(Biostrings) fst <- readAAStringSet(fst_dms_pth_2) msnid <- map_mod_sites(msnid, fst,                         accession_col = \"accession\",                         peptide_mod_col = \"peptide\",                         mod_char = \"*\",                        site_delimiter = \"lower\") head(psms(msnid))"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos.html","id":"inference-of-parsimonius-set","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Inference of parsimonius set","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data.\n","text":"Inference parsimonius step skipped pipeline. Remapping RefSeq IDs gene symbols helped situation ambiguous assignment. Demo inference available vignettes.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos.html","id":"prepare-masic-reporter-ion-intensities","dir":"Articles","previous_headings":"","what":"Prepare MASIC reporter ion intensities","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data.\n","text":"Fetching preparing reporter intensities based MASIC ouput.","code":"masic_data <- read_masic_data_from_DMS(data_package_num,                                         interference_score = T) masic_data <- filter_masic_data(masic_data, 0.5, 0)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos.html","id":"fetch-study-design-tables","dir":"Articles","previous_headings":"","what":"Fetch study design tables","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data.\n","text":"","code":"study_design_tables <- get_study_design_by_dataset_package(data_package_num) fractions <- study_design_tables$fractions samples <- study_design_tables$samples references <- study_design_tables$references"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos.html","id":"create-cross-tab","dir":"Articles","previous_headings":"","what":"Create cross-tab","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data.\n","text":"","code":"msnid <- apply_filter(msnid, \"!isDecoy\") aggregation_level <- c(\"SiteID\") quant_cross_tab <- create_crosstab(msnid,                                     masic_data,                                     aggregation_level,                                     fractions, samples, references) dim(quant_cross_tab) head(quant_cross_tab)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_MoTrPAC.html","id":"data-source","dir":"Articles","previous_headings":"","what":"Data source","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project.\n","text":"vignette demonstrates processing usign PNNL’s DMS data source. PNNL DMS based MS SQL Server. Typically data organized data packages according experiments. Data package contains phospho data mirroring PlexedPiperTestData number 3626. Smaller version data package, suggested testing purposes 3625.","code":"data_package_num <- 3625 # if there is no connection to PNNL DMS, vignette is not compiled if(!is_PNNL_DMS_connection_successful()){    message(\"There is no connection to PNNL DMS. This code in this vignette won't be evaluated.\")    knitr::opts_chunk$set(eval = FALSE) }"},{"path":[]},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_MoTrPAC.html","id":"read-the-ms-gf-output","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Read the MS-GF+ output","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project.\n","text":"First step determine MS-GF+ jobs using data package number. simply reads parsed text output MS-GF+ search engine. text files collated together resulting data.frame used create MSnID object.","code":"msnid <- read_msgf_data_from_DMS(data_package_num) show(msnid)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_MoTrPAC.html","id":"ascore","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"AScore","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project.\n","text":"Phospho dataset involve Ascore jobs improving phospho-site localization. one Ascore job per data package. fetched object data.frame links datasets, scans original PTM localization newly suggested locations. Importantly contains AScore column signifies confidence PTM assingment. AScore > 17 considered confident. Remove non-phospho. Need sure phospho symbol *!","code":"ascore <- get_AScore_results(data_package_num) msnid <- best_PTM_location_by_ascore(msnid, ascore) msnid <- apply_filter(msnid, \"grepl(\\\"\\\\\\\\*\\\", peptide)\")"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_MoTrPAC.html","id":"fdr-filter","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"FDR filter","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project.\n","text":"FDR filter peptide level.","code":"msnid <- filter_msgf_data_peptide_level(msnid, 0.01)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_MoTrPAC.html","id":"inference-of-parsimonius-set","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Inference of parsimonius set","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project.\n","text":"","code":"msnid <- infer_parsimonious_accessions(msnid)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_MoTrPAC.html","id":"mapping-sites-to-protein-sequence","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Mapping sites to protein sequence","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project.\n","text":"Mapping sites protein sequence. Call creates number columns describing mapping site/s onto protein sequences. important user SiteID. Prepare FASTA make sure entry names FASTA file match MSnID accessions. plan make conversion automatic. Note, type ID extraction ignore non-RefSeq entries contaminants. Mapping main call.","code":"fst_dms_pth <- path_to_FASTA_used_by_DMS(data_package_num) fst <- readAAStringSet(fst_dms_pth) names(fst) <- gsub(\" .*\", \"\", names(fst)) # names must match accessions msnid <- map_mod_sites(msnid, fst,                         accession_col = \"accession\",                         peptide_mod_col = \"peptide\",                         mod_char = \"*\",                        site_delimiter = \"lower\") head(psms(msnid))"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_MoTrPAC.html","id":"prepare-masic-reporter-ion-intensities","dir":"Articles","previous_headings":"","what":"Prepare MASIC reporter ion intensities","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project.\n","text":"Fetching preparing reporter intensities based MASIC ouput.","code":"masic_data <- read_masic_data_from_DMS(data_package_num,                                         interference_score = T) masic_data <- filter_masic_data(masic_data, 0.5, 0)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_MoTrPAC.html","id":"fetch-study-design-tables","dir":"Articles","previous_headings":"","what":"Fetch study design tables","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project.\n","text":"","code":"study_design_tables <- get_study_design_by_dataset_package(data_package_num) fractions <- study_design_tables$fractions samples <- study_design_tables$samples references <- study_design_tables$references"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_MoTrPAC.html","id":"create-cross-tab","dir":"Articles","previous_headings":"","what":"Create cross-tab","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project.\n","text":"Aggregation done directly SiteID level.","code":"msnid <- apply_filter(msnid, \"!isDecoy\") aggregation_level <- c(\"SiteID\") quant_cross_tab <- create_crosstab(msnid,                                     masic_data,                                     aggregation_level,                                     fractions, samples, references) dim(quant_cross_tab) head(quant_cross_tab)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_MoTrPAC.html","id":"post-processing--linking-with-ascores","dir":"Articles","previous_headings":"","what":"Post-processing. Linking with AScores","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project.\n","text":"","code":"x_ascore <-    psms(msnid) %>%    group_by(SiteID) %>%   summarise(maxAScore = max(maxAScore))  x <- quant_cross_tab %>%   as.data.frame() %>%   tibble::rownames_to_column(\"SiteID\") %>%   inner_join(x_ascore) %>%   mutate(ConfidentSite = maxAScore > 17) %>%   dplyr::select(SiteID, maxAScore, ConfidentSite, everything()) head(x)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_pep_MoTrPAC.html","id":"data-source","dir":"Articles","previous_headings":"","what":"Data source","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project. Peptide level.\n","text":"vignette demonstrates processing usign PNNL’s DMS data source. PNNL DMS based MS SQL Server. Typically data organized data packages according experiments. Data package contains phospho data mirroring PlexedPiperTestData number 3626. Smaller version data package, suggested testing purposes 3625.","code":"data_package_num <- 3625 # if there is no connection to PNNL DMS, vignette is not compiled if(!is_PNNL_DMS_connection_successful()){    message(\"There is no connection to PNNL DMS. This code in this vignette won't be evaluated.\")    knitr::opts_chunk$set(eval = FALSE) }"},{"path":[]},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_pep_MoTrPAC.html","id":"read-the-ms-gf-output","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Read the MS-GF+ output","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project. Peptide level.\n","text":"First step determine MS-GF+ jobs using data package number. simply reads parsed text output MS-GF+ search engine. text files collated together resulting data.frame used create MSnID object.","code":"msnid <- read_msgf_data_from_DMS(data_package_num) show(msnid)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_pep_MoTrPAC.html","id":"ascore","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"AScore","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project. Peptide level.\n","text":"Phospho dataset involve Ascore jobs improving phospho-site localization. one Ascore job per data package. fetched object data.frame links datasets, scans original PTM localization newly suggested locations. Importantly contains AScore column signifies confidence PTM assingment. AScore > 17 considered confident. Remove non-phospho. Need sure phospho symbol *!","code":"ascore <- get_AScore_results(data_package_num) msnid <- best_PTM_location_by_ascore(msnid, ascore) msnid <- apply_filter(msnid, \"grepl(\\\"\\\\\\\\*\\\", peptide)\")"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_pep_MoTrPAC.html","id":"fdr-filter","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"FDR filter","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project. Peptide level.\n","text":"FDR filter peptide level.","code":"msnid <- filter_msgf_data_peptide_level(msnid, 0.01)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_pep_MoTrPAC.html","id":"inference-of-parsimonius-set","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Inference of parsimonius set","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project. Peptide level.\n","text":"","code":"msnid <- infer_parsimonious_accessions(msnid)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_pep_MoTrPAC.html","id":"mapping-sites-to-protein-sequence","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Mapping sites to protein sequence","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project. Peptide level.\n","text":"Mapping sites protein sequence. Call creates number columns describing mapping site/s onto protein sequences. important user SiteID. Prepare FASTA make sure entry names FASTA file match MSnID accessions. plan make conversion automatic. Note, type ID extraction ignore non-RefSeq entries contaminants. Mapping main call.","code":"fst_dms_pth <- path_to_FASTA_used_by_DMS(data_package_num) fst <- readAAStringSet(fst_dms_pth) names(fst) <- gsub(\" .*\", \"\", names(fst)) # make names match accessions msnid <- map_mod_sites(msnid, fst,                         accession_col = \"accession\",                         peptide_mod_col = \"peptide\",                         mod_char = \"*\",                        site_delimiter = \"lower\") head(psms(msnid))"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_pep_MoTrPAC.html","id":"prepare-masic-reporter-ion-intensities","dir":"Articles","previous_headings":"","what":"Prepare MASIC reporter ion intensities","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project. Peptide level.\n","text":"Fetching preparing reporter intensities based MASIC ouput.","code":"masic_data <- read_masic_data_from_DMS(data_package_num,                                         interference_score = T) masic_data <- filter_masic_data(masic_data, 0.5, 0)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_pep_MoTrPAC.html","id":"fetch-study-design-tables","dir":"Articles","previous_headings":"","what":"Fetch study design tables","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project. Peptide level.\n","text":"","code":"study_design_tables <- get_study_design_by_dataset_package(data_package_num) fractions <- study_design_tables$fractions samples <- study_design_tables$samples references <- study_design_tables$references"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_pep_MoTrPAC.html","id":"create-cross-tab","dir":"Articles","previous_headings":"","what":"Create cross-tab","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project. Peptide level.\n","text":"Aggregation RefSeq / peptide level.","code":"msnid <- apply_filter(msnid, \"!isDecoy\") # aggregation_level <- c(\"SiteID\") aggregation_level <- c(\"accession\",\"peptide\") quant_cross_tab <- create_crosstab(msnid,                                     masic_data,                                     aggregation_level,                                     fractions, samples, references) dim(quant_cross_tab) head(quant_cross_tab)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_for_PNNL_DMS_phos_pep_MoTrPAC.html","id":"post-processing--linking-with-ascores","dir":"Articles","previous_headings":"","what":"Post-processing. Linking with AScores","title":"Suggested TMT processing pipeline for PNNL DMS *phospho* data\nfor MoTrPAC project. Peptide level.\n","text":"","code":"x_ascore <-    psms(msnid) %>%    group_by(accession, peptide, SiteID) %>%   summarise(maxAScore = max(maxAScore))  x <- quant_cross_tab %>%   as.data.frame() %>%   tibble::rownames_to_column(\"ID\") %>%   mutate(RefSeq =  sub(\"(.*)@(.\\\\..*\\\\..)\",\"\\\\1\",ID),          peptide = sub(\"(.*)@(.\\\\..*\\\\..)\",\"\\\\2\",ID)) %>%   dplyr::select(-ID) %>%   inner_join(x_ascore) %>%   mutate(ConfidentSite = maxAScore > 17,          peptide = gsub(\".\\\\.(.*)\\\\..\",\"\\\\1\",peptide, perl=T),          peptide = gsub(\"(\\\\w)\\\\*\",\"\\\\L\\\\1\",peptide, perl=T),          SiteID = sub(\"-\", \"_\", SiteID),          ptm_peptide = paste0(SiteID, \"-\", peptide))  %>%   dplyr::rename(ptm_id = SiteID,                 ascore = maxAScore,                 confidence = ConfidentSite) %>%   dplyr::select(-c(accession, RefSeq)) %>%   dplyr::select(ptm_peptide, ptm_id, peptide, ascore, confidence, everything()) head(x)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"data-source","dir":"Articles","previous_headings":"","what":"Data source","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"pipeline shows process TMT data processed outside PNNL DMS. implies raw files processed MSGF+ MASIC tools processing results corresponding directories. convienience results MSGF+ MASIC processing provided companion PlexedPiperTestData package.","code":""},{"path":[]},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"read-the-ms-gf-output","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Read the MS-GF+ output","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"simply reads parsed text output MS-GF+ search engine. text files collated together resulting data.frame used create MSnID object. MSnID methods corrects isotope selection error. Occasionally, instrument selects lightest monoisotopic peak, peak +1 C13. MS-GF+ still capable correctly identifying , downstream calculations mass measurement error need fixed. method corrects mass measurement errors accounting selection monoisotopic peak.","code":"path_to_MSGF_results <- system.file(    \"extdata/global/msgf_output\",    package = \"PlexedPiperTestData\") msnid <- read_msgf_data(path_to_MSGF_results) show(msnid) ## MSnID object ## Working directory: \".\" ## #Spectrum Files:  48  ## #PSMs: 1156754 at 31 % FDR ## #peptides: 511617 at 61 % FDR ## #accessions: 128378 at 98 % FDR msnid <- correct_peak_selection(msnid)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"msms-id-filter-and-peptide-level","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"MS/MS ID filter and peptide level","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"Main MS/MS filtering step. filter_msgf_data_peptide_level function wraps-MSnID::optimize_filter method uses PepQValue MS-GF+ output absolute deviation mass measurement error parent ions (ppm).","code":"show(msnid) ## MSnID object ## Working directory: \".\" ## #Spectrum Files:  48  ## #PSMs: 1156754 at 31 % FDR ## #peptides: 511617 at 61 % FDR ## #accessions: 128378 at 98 % FDR msnid <- filter_msgf_data_peptide_level(msnid, 0.01) show(msnid) ## MSnID object ## Working directory: \".\" ## #Spectrum Files:  48  ## #PSMs: 480204 at 0.45 % FDR ## #peptides: 96637 at 1 % FDR ## #accessions: 26926 at 8.7 % FDR"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"switching-annotation-from-refseq-to-gene-symbols","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Switching annotation from RefSeq to gene symbols","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"RefSeq gene symbols conversion step can skipped downstream analysis relies RefSeq IDs. RefSeq redundant database contains lots tentative splice isoforms unconfirmed ORFs. result, lot peptides (~60%) shared across multiple RefSeq accessions. adds uncertainity exactly protein quantifying. One solution switch less redundant annotations like gene symbol. Moreover gene symbols human-interpretable quite commonly used downstream analysis. step converts sequences names fasta file used MS/MS searches RefSeq gene symbols. necessary going count number peptide identifications per protein protein sequence coverage accessions switched RefSeq gene symbols.","code":"msnid <- remap_accessions_refseq_to_gene(msnid,                                           organism_name=\"Rattus norvegicus\") path_to_FASTA <- system.file(    \"extdata/Rattus_norvegicus_NCBI_RefSeq_2018-04-10.fasta.gz\",    package = \"PlexedPiperTestData\") temp_dir <- tempdir() file.copy(path_to_FASTA, temp_dir) ## [1] TRUE path_to_FASTA <- file.path(temp_dir, basename(path_to_FASTA)) path_to_FASTA_gene <- remap_accessions_refseq_to_gene_fasta(    path_to_FASTA, organism_name=\"Rattus norvegicus\")"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"msms-id-filter-at-protein-level","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"MS/MS ID filter at protein level","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"ago proteomics field established hard--fast two peptide per protein rule. protein identified one peptide considered confident identification. works OK, room improvement. example rule really penalizes short protens. long proteins (e.g. Titin 3.8 MDa) easily two matching peptides even reversed sequence. Thus, propose normalize number peptides per protein length use filtering criterion.","code":"msnid <- compute_num_peptides_per_1000aa(msnid, path_to_FASTA_gene) show(msnid) ## MSnID object ## Working directory: \".\" ## #Spectrum Files:  48  ## #PSMs: 480204 at 0.45 % FDR ## #peptides: 96637 at 1 % FDR ## #accessions: 8140 at 7 % FDR msnid <- filter_msgf_data_protein_level(msnid, 0.01) show(msnid) ## MSnID object ## Working directory: \".\" ## #Spectrum Files:  48  ## #PSMs: 398445 at 0.2 % FDR ## #peptides: 81353 at 0.35 % FDR ## #accessions: 5371 at 1 % FDR"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"inference-of-parsimonious-protein-set","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Inference of parsimonious protein set","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"situation sequence certain peptide matches multiple proteins adds complication downstream quantitative analysis clear protein product peptide originating . common ways selecting protein set. One simply retain uniquely matching peptides (unique_only=TRUE). Shared peptides simply discarded case. Alternatively (case unique_only=FALSE) shared peptides assigned proteins larger number uniquely mapping peptides. choice multiple proteins equal number uniquely mapping peptides, shared peptides assigned first protein according alphanumeric order.","code":"msnid <- infer_parsimonious_accessions(msnid, unique_only=TRUE) show(msnid) ## MSnID object ## Working directory: \".\" ## #Spectrum Files:  48  ## #PSMs: 302465 at 0.23 % FDR ## #peptides: 73079 at 0.34 % FDR ## #accessions: 4822 at 0.96 % FDR"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"remove-decoy-accessions","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Remove decoy accessions","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"","code":"msnid <- apply_filter(msnid, \"!isDecoy\")"},{"path":[]},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"read-masic-ouput","dir":"Articles","previous_headings":"Prepare reporter ion intensities","what":"Read MASIC ouput","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"MASIC tool extracting ion intensities. proper parameter settings can used extracting TMT (iTRAQ) reporter ion intensities. addition reporter number helpful metrics. interest interference score parent ion level S/N reporter ion level. Interference score reflects proportion ion population isolated fragmentation due targeted ion. words 1 - InterferenceScore due co-isolated species similar elution time parent ion m/z. S/N reporter level metric computed Thermo software.","code":"path_to_MASIC_results <- system.file(\"extdata/global/masic_output\", package = \"PlexedPiperTestData\") masic_data <- read_masic_data(path_to_MASIC_results, interference_score=TRUE) head(masic_data) ##                                             Dataset ScanNumber Collision.Mode ## 1 MoTrPAC_Pilot_TMT_W_S1_01_12Oct17_Elm_AQ-17-09-02          2            hcd ## 2 MoTrPAC_Pilot_TMT_W_S1_01_12Oct17_Elm_AQ-17-09-02          3            hcd ## 3 MoTrPAC_Pilot_TMT_W_S1_01_12Oct17_Elm_AQ-17-09-02          4            hcd ## 4 MoTrPAC_Pilot_TMT_W_S1_01_12Oct17_Elm_AQ-17-09-02          5            hcd ## 5 MoTrPAC_Pilot_TMT_W_S1_01_12Oct17_Elm_AQ-17-09-02          6            hcd ## 6 MoTrPAC_Pilot_TMT_W_S1_01_12Oct17_Elm_AQ-17-09-02          8            hcd ##   ParentIonMZ BasePeakIntensity BasePeakMZ ReporterIonIntensityMax Ion_126.128 ## 1      407.74         227695.44   407.7408                92236.87    70562.39 ## 2      396.72          59127.97   529.2943                34294.90    23706.89 ## 3      438.23         110444.82   362.2239                14053.40    12459.86 ## 4      481.50          37082.72   206.4663                    0.00        0.00 ## 5      549.28          21077.05   128.1285                21077.05        0.00 ## 6      388.72          40605.85   356.7193                 8087.76     6166.82 ##   Ion_127.125 Ion_127.131 Ion_128.128 Ion_128.134 Ion_129.131 Ion_129.138 ## 1    24864.62    17165.80    35625.00    92236.87     9640.23     8578.05 ## 2    13559.32     5856.83    16322.71    34294.90     4853.11     7938.24 ## 3    11785.91    10932.51    10653.32    12328.62     5959.86     9905.82 ## 4        0.00        0.00        0.00        0.00        0.00        0.00 ## 5    10998.67        0.00    21077.05     2725.50        0.00        0.00 ## 6     1371.27     2418.35     8087.76     5485.35        0.00        0.00 ##   Ion_130.135 Ion_130.141 Ion_131.138 Weighted.Avg.Pct.Intensity.Correction ## 1     6996.69    11833.07    32281.34                                     0 ## 2        0.00     1465.03    18182.27                                     0 ## 3     8387.04    11166.70    14053.40                                     0 ## 4        0.00        0.00        0.00                                     0 ## 5        0.00        0.00     6800.70                                     0 ## 6     1543.48     1943.96     7436.60                                     0 ##   Ion_126.128_SignalToNoise Ion_127.125_SignalToNoise Ion_127.131_SignalToNoise ## 1                     71.47                     25.17                     17.38 ## 2                     26.12                     14.94                      6.45 ## 3                     12.40                     11.75                     10.90 ## 4                        NA                        NA                        NA ## 5                        NA                      9.19                        NA ## 6                      6.92                      1.54                      2.71 ##   Ion_128.128_SignalToNoise Ion_128.134_SignalToNoise Ion_129.131_SignalToNoise ## 1                     36.04                     93.32                      9.75 ## 2                     17.97                     37.77                      5.34 ## 3                     10.64                     12.31                      5.96 ## 4                        NA                        NA                        NA ## 5                     17.57                      2.27                        NA ## 6                      9.04                      6.13                        NA ##   Ion_129.138_SignalToNoise Ion_130.135_SignalToNoise Ion_130.141_SignalToNoise ## 1                      8.67                      7.07                     11.96 ## 2                      8.74                        NA                      1.61 ## 3                      9.91                      8.40                     11.18 ## 4                        NA                        NA                        NA ## 5                        NA                        NA                        NA ## 6                        NA                      1.72                      2.16 ##   Ion_131.138_SignalToNoise Ion_126.128_Resolution Ion_127.125_Resolution ## 1                     32.71                  44102                  42700 ## 2                     19.93                  42702                  41100 ## 3                     14.13                  42006                  40702 ## 4                        NA                     NA                     NA ## 5                      5.66                     NA                  40302 ## 6                      8.26                  40000                  26400 ##   Ion_127.131_Resolution Ion_128.128_Resolution Ion_128.134_Resolution ## 1                  42100                  41800                  44404 ## 2                  37000                  40400                  43404 ## 3                  41402                  40700                  40400 ## 4                     NA                     NA                     NA ## 5                     NA                  42102                  46600 ## 6                  30400                  40400                  44300 ##   Ion_129.131_Resolution Ion_129.138_Resolution Ion_130.135_Resolution ## 1                  40500                  39500                  36800 ## 2                  36400                  39700                     NA ## 3                  38800                  40200                  38900 ## 4                     NA                     NA                     NA ## 5                     NA                     NA                     NA ## 6                     NA                     NA                  28800 ##   Ion_130.141_Resolution Ion_131.138_Resolution ParentIonIndex       MZ ## 1                  41100                  42302              0 407.7424 ## 2                  29800                  41802              1 396.7176 ## 3                  40400                  41002              2 438.2270 ## 4                     NA                     NA              3 481.5049 ## 5                     NA                  40300              4 549.2793 ## 6                  28500                  38700              5 388.7199 ##   SurveyScanNumber OptimalPeakApexScanNumber PeakApexOverrideParentIonIndex ## 1                1                        12                             -1 ## 2                1                        12                             -1 ## 3                1                       131                             18 ## 4                1                        23                             -1 ## 5                1                        15                             -1 ## 6                7                        12                             -1 ##   CustomSICPeak PeakScanStart PeakScanEnd PeakScanMaxIntensity PeakMaxIntensity ## 1             0             1          19                   12          2901600 ## 2             0             1          19                   12          2181900 ## 3             0             1         114                  107          8255600 ## 4             0             1          52                   23           401824 ## 5             0             1          16                   15           363656 ## 6             0             1          30                   12           478135 ##   PeakSignalToNoiseRatio FWHMInScans  PeakArea ParentIonIntensity ## 1               211.0000           5  50422000            2579600 ## 2                19.6900           5  34508000            1690600 ## 3                 9.4650          44 444610000             658727 ## 4                27.9900          23  16244000             344491 ## 5                 0.6998           5   5941200             347071 ## 6                28.7100          19  10718000             291189 ##   PeakBaselineNoiseLevel PeakBaselineNoiseStDev PeakBaselinePointsUsed ## 1                  13750                  97562                  10113 ## 2                 110841                1120000                  10166 ## 3                 872195                2620000                  10129 ## 4                  14356                  65777                  10109 ## 5                 519640                1990000                  10109 ## 6                  16653                 142562                  10142 ##   StatMomentsArea CenterOfMassScan PeakStDev PeakSkew PeakKSStat ## 1        47031000               11      5.68 -0.18920     0.3528 ## 2        31578000               11      5.59 -0.21720     0.3469 ## 3       343470000               82     22.80 -0.62610     1.0990 ## 4        14899000               26     14.10  0.05387     0.5036 ## 5         2528900               15      2.49 -0.58330     0.4302 ## 6         9961100               16      8.60 -0.05055     0.2833 ##   StatMomentsDataCountUsed InterferenceScore ## 1                       10            0.9961 ## 2                       10            0.9925 ## 3                       89            1.0000 ## 4                       39            1.0000 ## 5                        5            1.0000 ## 6                       18            0.9688"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"filtering-masic-data","dir":"Articles","previous_headings":"Prepare reporter ion intensities","what":"Filtering MASIC data","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"case (currently recommended filters) require least 50% ion population due targeted ion filter S/N level.","code":"nrow(masic_data) ## [1] 1598123 masic_data <- filter_masic_data(masic_data, 0.5, 0) nrow(masic_data) ## [1] 1523732"},{"path":[]},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"laying-out-study-desing","dir":"Articles","previous_headings":"Creating cross-tab","what":"Laying out study desing","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"convert PSMs reporter ion intensities meaningful quantitative data necessary know samples reporter channels intended reference channel (combination channels). entire study desing captured three tables - fractions, samples, references.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"fractions","dir":"Articles","previous_headings":"Creating cross-tab","what":"Fractions","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"links dataset original plex.","code":"library(readr) fractions <- read_tsv(system.file(\"extdata/study_design/fractions.txt\", package = \"PlexedPiperTestData\")) head(fractions) ## # A tibble: 6 × 2 ##   Dataset                                           PlexID ##   <chr>                                             <chr>  ## 1 MoTrPAC_Pilot_TMT_W_S1_01_12Oct17_Elm_AQ-17-09-02 S1     ## 2 MoTrPAC_Pilot_TMT_W_S1_02_12Oct17_Elm_AQ-17-09-02 S1     ## 3 MoTrPAC_Pilot_TMT_W_S1_05_12Oct17_Elm_AQ-17-09-02 S1     ## 4 MoTrPAC_Pilot_TMT_W_S1_03_12Oct17_Elm_AQ-17-09-02 S1     ## 5 MoTrPAC_Pilot_TMT_W_S1_04_12Oct17_Elm_AQ-17-09-02 S1     ## 6 MoTrPAC_Pilot_TMT_W_S1_06_12Oct17_Elm_AQ-17-09-02 S1"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"samples","dir":"Articles","previous_headings":"Creating cross-tab","what":"Samples","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"links plex ID, reporter channel samples. minor difference ReporterAlias MeasurementName. MeasurementName sample name finally reported. ReporterAlias itermediate ReporterName MeasurementName used defining reference .","code":"samples <- read_tsv(system.file(\"extdata/study_design/samples.txt\", package = \"PlexedPiperTestData\")) head(samples,10) ## # A tibble: 10 × 5 ##    PlexID QuantBlock ReporterName ReporterAlias MeasurementName ##    <chr>       <dbl> <chr>        <chr>         <chr>           ##  1 S1              1 126          R_01          R_01            ##  2 S1              1 127N         R_03          R_03            ##  3 S1              1 127C         R_02          R_02            ##  4 S1              1 128N         R_05          R_05            ##  5 S1              1 128C         R_04          R_04            ##  6 S1              1 129N         S_02          S_02            ##  7 S1              1 129C         S_01          S_01            ##  8 S1              1 130N         S_04          S_04            ##  9 S1              1 130C         S_03          S_03            ## 10 S1              1 131          ref           NA"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"references","dir":"Articles","previous_headings":"Creating cross-tab","what":"References","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"Reference can certain channel, average multiple channels 1. general form expression ReporterAlias names variables. evaluated PlexID/QuantBlock combination applied divide reporter ion intensities within corresponding PlexID/QuantBlock. QuantBlock can though way defining sub-plex. typical TMT experiment QuantBlock always 1. case 5 pairwise comparisons within TMT10, 5 QuantBlocks (1..5) reference QuantBlock.","code":"references <- read_tsv(system.file(\"extdata/study_design/references.txt\", package = \"PlexedPiperTestData\")) head(references) ## # A tibble: 2 × 3 ##   PlexID QuantBlock Reference ##   <chr>       <dbl> <chr>     ## 1 S1              1 ref       ## 2 S2              1 ref"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1.html","id":"creating-quantitative-cross-tab","dir":"Articles","previous_headings":"Creating cross-tab","what":"Creating quantitative cross-tab","title":"Suggested TMT processing pipeline. Variant 1.\n","text":"Final step MS/MS IDs reporter ions linked together, aggregated peptide accession (.e. protein) level. retain protein IDs aggregating peptide level suggest aggregation_level <- c(\"accession\",\"peptide\")","code":"aggregation_level <- c(\"accession\") quant_cross_tab <- create_crosstab(msnid,                                     masic_data,                                     aggregation_level,                                     fractions, samples, references) dim(quant_cross_tab) ## [1] 4764   18 head(quant_cross_tab) ##              R_01        R_02       R_03         R_04       R_05       R_06 ## ATP8  -0.19479833 -0.40351693 -0.7899082 -0.207686309 -0.5735321 -0.6217460 ## Aagab -0.33114648 -0.09698122 -0.4610205 -0.204455063 -0.3674259 -0.9622379 ## Aak1  -0.12524883 -0.04935325 -0.3961333  0.006220386 -0.1831229 -0.8278655 ## Aamdc -0.18262236 -0.14712884 -0.4295235 -0.338216384 -0.5193325 -0.7662433 ## Aamp   0.01319057 -0.05586270 -0.4874643 -0.176035341 -0.2877920 -0.9128142 ## Aar2  -0.28239827 -0.05731137 -0.4382888 -0.312729380 -0.5601654 -0.7180116 ##             R_07       R_08         R_09        S_01       S_02       S_03 ## ATP8  -0.6862703 -0.3539212 -0.239588729 -1.23906148 -1.0119484 -0.7436739 ## Aagab -0.8219094 -0.6039567 -0.349913889 -0.16655998 -1.0566135 -0.6460940 ## Aak1  -0.5477375 -0.4730509  0.032356743 -0.02601848 -0.7284031 -0.5183336 ## Aamdc -0.6260984 -0.4093530 -0.004382412 -0.18326078 -0.8802873 -0.5951816 ## Aamp  -0.7298059 -0.5725573 -0.127739120  0.03925511 -0.5639567 -0.5788605 ## Aar2  -0.6492230 -0.3802387 -0.033934887 -0.27326401 -0.8040756 -0.5338878 ##             S_04        S_05       S_06       S_07       S_08       S_09 ## ATP8  -0.8203905  0.18483797 -0.1652751 -0.3545360 -0.6421465 -0.4344390 ## Aagab -0.9723428 -0.72798837 -0.7156128 -0.1366306 -1.0352613 -0.6912676 ## Aak1  -1.0432754 -0.19864328 -0.3533702 -0.3482648 -0.5589898 -0.5497933 ## Aamdc -0.9138052 -0.19684213 -0.2303194 -0.2628076 -0.7913746 -0.5035342 ## Aamp  -0.9582277 -0.28850123 -0.3668970 -0.5391545 -0.8578482 -0.5955917 ## Aar2  -0.9288846 -0.01109715 -0.3226456 -0.2250253 -0.7562436 -0.4057189"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"data-source","dir":"Articles","previous_headings":"","what":"Data source","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"pipeline shows process TMT data processed within PNNL DMS. Data PNNL DMS organized using MS SQL Server data packages. data package number matching PlexedPiperTestData 3442. Note, vignette won’t compile now access PNNL DMS. Alternative, smaller variant 3442 package 3606.","code":"data_package_num <- 3606 # if there is no connection to PNNL DMS, vignette is not compiled if(!is_PNNL_DMS_connection_successful()){    message(\"There is no connection to PNNL DMS. This code in this vignette won't be evaluated.\")    knitr::opts_chunk$set(eval = FALSE) }"},{"path":[]},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"read-the-ms-gf-output","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Read the MS-GF+ output","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"Fetching MS/MS search results data package number. text files collated together resulting data.frame used create MSnID object. MSnID methods corrects isotope selection error. Occasionally, instrument selects lightest monoisotopic peak, peak +1 C13. MS-GF+ still capable correctly identifying , downstream calculations mass measurement error need fixed. method corrects mass measurement errors accounting selection monoisotopic peak.","code":"msnid <- read_msgf_data_from_DMS(data_package_num) show(msnid) msnid <- correct_peak_selection(msnid)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"msms-id-filter-and-peptide-level","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"MS/MS ID filter and peptide level","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"Main MS/MS filtering step. filter_msgf_data_peptide_level function wraps-MSnID::optimize_filter method uses PepQValue MS-GF+ output absolute deviation mass measurement error parent ions (ppm).","code":"show(msnid) msnid <- filter_msgf_data_peptide_level(msnid, 0.01) show(msnid)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"switching-annotation-from-refseq-to-gene-symbols","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Switching annotation from RefSeq to gene symbols","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"RefSeq gene symbols conversion step can skipped downstream analysis relies RefSeq IDs. RefSeq redundant database contains lots tentative splice isoforms unconfirmed ORFs. result, lot peptides (~60%) shared across multiple RefSeq accessions. adds uncertainity exactly protein quantifying. One solution switch less redundant annotations like gene symbol. Moreover gene symbols human-interpretable quite commonly used downstream analysis. step converts sequences names fasta file used MS/MS searches RefSeq gene symbols. necessary going count number peptide identifications per protein protein sequence coverage accessions switched RefSeq gene symbols.","code":"msnid <- remap_accessions_refseq_to_gene(msnid,                                           organism_name=\"Rattus norvegicus\") path_to_FASTA <- path_to_FASTA_used_by_DMS(data_package_num) path_to_FASTA_gene <- remap_accessions_refseq_to_gene_fasta(    path_to_FASTA,    organism_name = \"Rattus norvegicus\" )"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"msms-id-filter-at-protein-level","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"MS/MS ID filter at protein level","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"ago proteomics field established hard--fast two peptide per protein rule. protein identified one peptide considered confident identification. works OK, room improvement. example rule really penalizes short protens. long proteins (e.g. Titin 3.8 MDa) easily two matching peptides even reversed sequence. Thus, propose normalize number peptides per protein length use filtering criterion.","code":"msnid <- compute_num_peptides_per_1000aa(msnid, path_to_FASTA_gene) show(msnid) msnid <- filter_msgf_data_protein_level(msnid, 0.01) show(msnid)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"inference-of-parsimonious-protein-set","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Inference of parsimonious protein set","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"situation sequence certain peptide matches multiple proteins adds complication downstream quantitative analysis clear protein product peptide originating . common ways selecting protein set. One simply retain uniquely matching peptides (unique_only=TRUE). Shared peptides simply discarded case. Alternatively (case unique_only=FALSE) shared peptides assigned proteins larger number uniquely mapping peptides. choice multiple proteins equal number uniquely mapping peptides, shared peptides assigned first protein according alphanumeric order.","code":"msnid <- infer_parsimonious_accessions(msnid, unique_only=TRUE) show(msnid)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"remove-decoy-accessions","dir":"Articles","previous_headings":"Prepare MS/MS IDs","what":"Remove decoy accessions","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"","code":"msnid <- apply_filter(msnid, \"!isDecoy\")"},{"path":[]},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"read-masic-ouput","dir":"Articles","previous_headings":"Prepare reporter ion intensities","what":"Read MASIC ouput","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"MASIC tool extracting ion intensities. proper parameter settings can used extracting TMT (iTRAQ) reporter ion intensities. addition reporter number helpful metrics. interest interference score parent ion level S/N reporter ion level. Interference score reflects proportion ion population isolated fragmentation due targeted ion. words 1 - InterferenceScore due co-isolated species similar elution time parent ion m/z. S/N reporter level metric computed Thermo software.","code":"masic_data <- read_masic_data_from_DMS(data_package_num,                                         interference_score=TRUE) head(masic_data)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"filtering-masic-data","dir":"Articles","previous_headings":"Prepare reporter ion intensities","what":"Filtering MASIC data","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"case (currently recommended filters) require least 50% ion population due targeted ion filter S/N level.","code":"nrow(masic_data) masic_data <- filter_masic_data(masic_data, 0.5, 0) nrow(masic_data)"},{"path":[]},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"laying-out-study-desing","dir":"Articles","previous_headings":"Creating cross-tab","what":"Laying out study desing","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"convert PSMs reporter ion intensities meaningful quantitative data necessary know samples reporter channels intended reference channel (combination channels). entire study desing captured three tables - fractions, samples, references.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"fractions","dir":"Articles","previous_headings":"Creating cross-tab","what":"Fractions","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"Dataset fraction assigment can read separate file inferred dataset names. example shows latter.","code":"library(dplyr) fractions <- masic_data %>%    distinct(Dataset) %>%    mutate(PlexID =sub(\"MoTrPAC_Pilot_TMT_W_(S\\\\d).*\",\"\\\\1\",Dataset)) head(fractions)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"samples","dir":"Articles","previous_headings":"Creating cross-tab","what":"Samples","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"links plex ID, reporter channel samples. minor difference ReporterAlias MeasurementName. MeasurementName sample name finally reported. ReporterAlias itermediate ReporterName MeasurementName used defining reference . may way query DMS. point, ’ll read file PlexedPiperTestData package.","code":"library(readr) samples <- read_tsv(system.file(\"extdata/study_design/samples.txt\",                                  package = \"PlexedPiperTestData\")) head(samples,10)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"references","dir":"Articles","previous_headings":"Creating cross-tab","what":"References","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"Reference can certain channel, average multiple channels 1. general form expression ReporterAlias names variables. evaluated PlexID/QuantBlock combination applied divide reporter ion intensities within corresponding PlexID/QuantBlock. QuantBlock can though way defining sub-plex. typical TMT experiment QuantBlock always 1. case 5 pairwise comparisons within TMT10, 5 QuantBlocks (1..5) reference QuantBlock.","code":"references <- read_tsv(system.file(\"extdata/study_design/references.txt\",                                    package = \"PlexedPiperTestData\")) head(references)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"reading-study-desing-tables-from-dms-data-package-locations","dir":"Articles","previous_headings":"Creating cross-tab","what":"Reading Study Desing Tables from DMS Data Package Locations","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"convention, study design tables stored data package folder DMS.","code":"study_design_tables <- read_study_design_from_DMS(data_package_num) fractions <- study_design_tables$fractions samples <- study_design_tables$samples references <- study_design_tables$references"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/articles/tmt_pipeline_v1_PNNL_DMS.html","id":"creating-quantitative-cross-tab","dir":"Articles","previous_headings":"Creating cross-tab","what":"Creating quantitative cross-tab","title":"Suggested TMT processing pipeline. Variant 1.\nVersion for PNNL DMS.\n","text":"Final step MS/MS IDs reporter ions linked together, aggregated peptide accession (.e. protein) level. retain protein IDs aggregating peptide level suggest aggregation_level <- c(\"accession\",\"peptide\")","code":"aggregation_level <- c(\"accession\") quant_cross_tab <- create_crosstab(msnid,                                     masic_data,                                     aggregation_level,                                     fractions, samples, references) dim(quant_cross_tab) head(quant_cross_tab)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vladislav Petyuk. Maintainer.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"vladislav.petyuk@pnnl.gov VP (2023). PlexedPiper: Pipeline isobaric quantification. https://pnnl-comp-mass-spec.github.io/PlexedPiper/, https://github.com/PNNL-Comp-Mass-Spec/PlexedPiper.","code":"@Manual{,   title = {PlexedPiper: Pipeline for isobaric quantification},   author = {Vladislav Petyuk vladislav.petyuk@pnnl.gov},   year = {2023},   note = {https://pnnl-comp-mass-spec.github.io/PlexedPiper/, https://github.com/PNNL-Comp-Mass-Spec/PlexedPiper}, }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/index.html","id":"plexedpiper","dir":"","previous_headings":"","what":"Pipeline for isobaric quantification","title":"Pipeline for isobaric quantification","text":"R package used PNNL processing isobaric labeling (e.g. TMT) proteomics data. key inputs : MS/MS identifications MS-GF+ search engine Reporter ion intensities extracted using MASIC table linking dataset plexes table linking reporter channels sample names table identifying reference within plex","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/index.html","id":"updates","dir":"","previous_headings":"","what":"Updates","title":"Pipeline for isobaric quantification","text":"Updates package detailed NEWS.md file releases.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/index.html","id":"website","dir":"","previous_headings":"","what":"Website","title":"Pipeline for isobaric quantification","text":"PlexedPiper pkgdown website contains pre-built vignettes well updates documentation.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/index.html","id":"r-installation-and-usage","dir":"","previous_headings":"","what":"R Installation and Usage","title":"Pipeline for isobaric quantification","text":"","code":"if(!require(\"remotes\", quietly = T)) install.packages(\"remotes\") remotes::install_github(\"PNNL-Comp-Mass-Spec/PlexedPiper\", build_vignettes = TRUE) library(PlexedPiper) vignette(\"tmt_pipeline_v1\")"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/index.html","id":"example-data","dir":"","previous_headings":"R Installation and Usage","what":"Example Data","title":"Pipeline for isobaric quantification","text":"companion R package test data based MoTrPAC pilot study available PlexedPiperTestData","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/index.html","id":"dockerlinux-installation","dir":"","previous_headings":"","what":"Docker/Linux installation","title":"Pipeline for isobaric quantification","text":"PlexedPiper can run within Docker Container example Dockerfile shows required system libraries, starting base rocker/TidyVerse image","code":"FROM rocker/tidyverse:3.6.1 RUN apt-get update \\  && apt-get install -y --no-install-recommends \\  unixodbc \\  unixodbc-dev \\  freetds-dev \\  freetds-bin \\  tdsodbc \\  libcurl4-openssl-dev \\  libxml2-dev \\  libnetcdf-dev \\  libssl-dev RUN R -e 'remotes::install_github(\"PNNL-Comp-Mass-Spec/PlexedPiper\", build_vignettes = TRUE)'"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/index.html","id":"macos-installation","dir":"","previous_headings":"","what":"MacOS installation","title":"Pipeline for isobaric quantification","text":"MacOS, install Homebrew, use Note, ---unixodbc option freetds installation deprecated. Create ~/.odbcinst.ini file add location libtdsodbc.differs, use proper location.","code":"brew install unixodbc brew install freetds [FreeTDS] Driver = /usr/local/lib/libtdsodbc.so"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/index.html","id":"installation-tips","dir":"","previous_headings":"MacOS installation","what":"Installation Tips","title":"Pipeline for isobaric quantification","text":"within PNNL network may error associated mount_smbfs. happens due network access credentials. Options either wait proactively access one PNNL servers. example try mounting one public directories terminal window. Enter network password requested. mount -t smbfs //protoapps/DataPkgs/Public/ ~/temp_msms_results compilation vignettes imply access PNNL DMS proceed smoothly.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/index.html","id":"original-location","dir":"","previous_headings":"","what":"Original Location","title":"Pipeline for isobaric quantification","text":"original location vladpetyuk account, repo PlexedPiper.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/best_PTM_location_by_ascore.html","id":null,"dir":"Reference","previous_headings":"","what":"Improve Phosphosite Localization — best_PTM_location_by_ascore","title":"Improve Phosphosite Localization — best_PTM_location_by_ascore","text":"Use AScore results improve phosphosite localization.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/best_PTM_location_by_ascore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Improve Phosphosite Localization — best_PTM_location_by_ascore","text":"","code":"best_PTM_location_by_ascore(msnid, ascore)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/best_PTM_location_by_ascore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Improve Phosphosite Localization — best_PTM_location_by_ascore","text":"msnid (MSnID object) MS/MS ID data ascore (data.frame) AScore results","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/best_PTM_location_by_ascore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Improve Phosphosite Localization — best_PTM_location_by_ascore","text":"(MSnID object) MS/MS ID data added AScore","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/best_PTM_location_by_ascore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Improve Phosphosite Localization — best_PTM_location_by_ascore","text":"","code":"if (FALSE) { # Get AScore results path_to_ascore <- system.file(\"extdata/phospho/ascore_output\",                               package = \"PlexedPiperTestData\") ascore <- read_AScore_results(path_to_ascore)  # MS/MS IDs path_to_MSGF_results <- system.file(\"extdata/global/msgf_output\",                                     package = \"PlexedPiperTestData\") msnid <- read_msgf_data(path_to_MSGF_results)  # Improve phosphosite localization msnid <- best_PTM_location_by_ascore(msnid, ascore) }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/compute_num_peptides_per_1000aa.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute number of peptides per 1000 aa — compute_num_peptides_per_1000aa","title":"Compute number of peptides per 1000 aa — compute_num_peptides_per_1000aa","text":"Computing number peptides per 1000 amino acids.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/compute_num_peptides_per_1000aa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute number of peptides per 1000 aa — compute_num_peptides_per_1000aa","text":"","code":"compute_num_peptides_per_1000aa(msnid, path_to_FASTA)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/compute_num_peptides_per_1000aa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute number of peptides per 1000 aa — compute_num_peptides_per_1000aa","text":"msnid (MSnID object) MS/MS ID data path_to_FASTA (character) Path FASTA file.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/compute_num_peptides_per_1000aa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute number of peptides per 1000 aa — compute_num_peptides_per_1000aa","text":"(MSnID object) MS/MS ID data computed number peptides per   1000 aa. Added column name - \"peptides_per_1000aa\".","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/compute_num_peptides_per_1000aa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute number of peptides per 1000 aa — compute_num_peptides_per_1000aa","text":"","code":"if (FALSE) { path_to_MSGF_results <- system.file(\"extdata/global/msgf_output\",                                     package = \"PlexedPiperTestData\") msnid <- read_msgf_data(path_to_MSGF_results) path_to_FASTA <- system.file(   \"extdata/Rattus_norvegicus_NCBI_RefSeq_2018-04-10.fasta.gz\",   package = \"PlexedPiperTestData\" ) msnid <- compute_num_peptides_per_1000aa(msnid, path_to_FASTA) hist(msnid$peptides_per_1000aa) }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/create_crosstab.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes Cross-Tab With Quantitative Data. — create_crosstab","title":"Makes Cross-Tab With Quantitative Data. — create_crosstab","text":"Links filtered MS/MS IDs reporter intensities. Divides reporter ion intensities corresponding reference returns cross-tab. Rows species (e.g. proteins global, phosphopeptides phosphoproteomic experiment), columns sample names.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/create_crosstab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes Cross-Tab With Quantitative Data. — create_crosstab","text":"","code":"create_crosstab(   msnid,   reporter_intensities,   aggregation_level,   fractions,   samples,   references )"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/create_crosstab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes Cross-Tab With Quantitative Data. — create_crosstab","text":"msnid (MSnID object) filtered MS/MS identifications reporter_intensities (object coercible data.table) collated table filtered reporter intensities. aggregation_level (character) defines intensities needs aggregated. point aggregation function `sum`. Typically, intensities different fractions plex aggregated. Also (e.g. global proteomics) intensities different scans identifying peptides protein aggregated together . fractions (object coercible data.table) fractions study design table Dataset PlexID columns. samples (object coercible data.table) samples study design table columns PlexID, QuantBlock, ReporterName, ReporterAlias, MeasurementName. references (object coercible data.table) references study design table columns PlexID, QuantBlock, Reference.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/create_crosstab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes Cross-Tab With Quantitative Data. — create_crosstab","text":"(matrix) log2-transformed relative reporter ion intensities. Row   names names measured species. Column names names   samples.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/create_crosstab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Makes Cross-Tab With Quantitative Data. — create_crosstab","text":"","code":"if (FALSE) { # Prepare MS/MS IDs path_to_MSGF_results <- system.file(\"extdata/global/msgf_output\",                                     package = \"PlexedPiperTestData\") msnid <- read_msgf_data(path_to_MSGF_results) msnid <- MSnID::correct_peak_selection(msnid) show(msnid) msnid <- filter_msgf_data_peptide_level(msnid, 0.01) show(msnid) path_to_FASTA <- system.file(   \"extdata/Rattus_norvegicus_NCBI_RefSeq_2018-04-10.fasta.gz\",   package = \"PlexedPiperTestData\" ) msnid <- compute_num_peptides_per_1000aa(msnid, path_to_FASTA) msnid <- filter_msgf_data_protein_level(msnid, 0.01) show(msnid)  # Prepare table with reporter ion intensities path_to_MASIC_results <- system.file(\"extdata/global/masic_output\",                                      package = \"PlexedPiperTestData\") masic_data <- read_masic_data(path_to_MASIC_results,                               interference_score = TRUE) masic_data <- filter_masic_data(masic_data, 0.5, 0)  # Creating cross-tab library(readr) fractions <- read_tsv(system.file(\"extdata/study_design/fractions.txt\",                                   package = \"PlexedPiperTestData\")) samples <- read_tsv(system.file(\"extdata/study_design/samples.txt\",                                 package = \"PlexedPiperTestData\")) references <- read_tsv(system.file(\"extdata/study_design/references.txt\",                                    package = \"PlexedPiperTestData\")) aggregation_level <- c(\"accession\")  out <- create_crosstab(msnid, masic_data, aggregation_level,                        fractions, samples, references) dim(out) head(out) }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/create_msnset.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes MSnSet from Quantitative Crosstab. — create_msnset","title":"Makes MSnSet from Quantitative Crosstab. — create_msnset","text":"Creates MSnSet object quantitative crosstab attached phenotype data.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/create_msnset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes MSnSet from Quantitative Crosstab. — create_msnset","text":"","code":"create_msnset(crosstab, samples)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/create_msnset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes MSnSet from Quantitative Crosstab. — create_msnset","text":"crosstab (matrix) log2-transformed relative reporter ion intensities. Row names names measured species. Column names names samples. samples (data.table data.frame) matches sample names reporter ions.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/create_msnset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes MSnSet from Quantitative Crosstab. — create_msnset","text":"MSnSet object log2-transformed relative reporter ion   intensities expression data samples table phenotype data.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/create_msnset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Makes MSnSet from Quantitative Crosstab. — create_msnset","text":"","code":"if (FALSE) { # Prepare MS/MS IDs path_to_MSGF_results <- system.file(\"extdata/global/msgf_output\",                                     package = \"PlexedPiperTestData\") msnid <- read_msgf_data(path_to_MSGF_results) msnid <- MSnID::correct_peak_selection(msnid) show(msnid) msnid <- filter_msgf_data_peptide_level(msnid, 0.01) show(msnid) path_to_FASTA <- system.file(   \"extdata/Rattus_norvegicus_NCBI_RefSeq_2018-04-10.fasta.gz\",   package = \"PlexedPiperTestData\" ) msnid <- compute_num_peptides_per_1000aa(msnid, path_to_FASTA) msnid <- filter_msgf_data_protein_level(msnid, 0.01) show(msnid)  # Prepare table with reporter ion intensities path_to_MASIC_results <- system.file(\"extdata/global/masic_output\",                                      package = \"PlexedPiperTestData\") masic_data <- read_masic_data(path_to_MASIC_results,                               interference_score = TRUE) masic_data <- filter_masic_data(masic_data, 0.5, 0)  # Creating cross-tab library(readr) fractions <- read_tsv(system.file(\"extdata/study_design/fractions.txt\",                                   package = \"PlexedPiperTestData\")) samples <- read_tsv(system.file(\"extdata/study_design/samples.txt\",                                 package = \"PlexedPiperTestData\")) references <- read_tsv(system.file(\"extdata/study_design/references.txt\",                                    package = \"PlexedPiperTestData\"))  aggregation_level <- c(\"accession\")  crosstab <- create_crosstab(msnid, masic_data, aggregation_level,                             fractions, samples, references) m <- create_msnset(crosstab, samples) dim(m) library(MSnbase) head(exprs(m)) }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_masic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering MASIC Data — filter_masic_data","title":"Filtering MASIC Data — filter_masic_data","text":"Filtering MASIC data interference score signal--noise ratio (S/N) individual channels. Note: function current form also drops 40 columns data.frame. E.g. TMT10 table contains 62 columns. filtering, remaining columns 10 TMT channels, Dataset, ScanNumber.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_masic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering MASIC Data — filter_masic_data","text":"","code":"filter_masic_data(x, interference_score_threshold = 0.9, s2n_threshold = 4)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_masic_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering MASIC Data — filter_masic_data","text":"x (data.frame) collated MASIC output interference_score_threshold (numeric) interference score reflects proportion ion population isolated fragmentation due targeted ion. 1 - InferferenceScore due co-isolated species. higher interference score, cleaner parent ion MS1 level. Default 0.9. s2n_threshold (numeric) S/N calculated vendor extracted MASIC raw files. Default 4.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_masic_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering MASIC Data — filter_masic_data","text":"(data.frame) filtered MASIC output","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_masic_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filtering MASIC Data — filter_masic_data","text":"Default values interference_score_threshold = 0.9 s2n_threshold = 4 fairly stringent. recommend least setting interference_score_threshold = 0.5 s2n_threshold = 0. filtering intended, use filter_masic_data(x,0,0).","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_masic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filtering MASIC Data — filter_masic_data","text":"","code":"if (FALSE) { path_to_MASIC_results <- system.file(\"extdata/global/masic_output\",                                      package = \"PlexedPiperTestData\") x <- read_masic_data(path_to_MASIC_results, interference_score = TRUE) dim(x) x1 <- filter_masic_data(x,0,0) dim(x1) x2 <- filter_masic_data(x) dim(x2) }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msfragger_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering msfragger Data — filter_msfragger_data","title":"Filtering msfragger Data — filter_msfragger_data","text":"Filtering msfragger data. implementation, peptide-level filter optimizes ppm one Expectation PeptideProphet Probability thresholds achieve maximum number peptide identifications within given FDR constraint. accession-level filter optimizes based peptides_per_1000aa, compute_num_peptides_per_1000aa must used first.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msfragger_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering msfragger Data — filter_msfragger_data","text":"","code":"filter_msfragger_data(   msnid,   level,   filtering_criterion = c(\"pp_prob\", \"evalue\"),   fdr.max = 0.01,   n.iter.grid = 500,   n.iter.nm = 100 )"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msfragger_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering msfragger Data — filter_msfragger_data","text":"msnid (MSnID object) collated msfragger output level (character) Level perform FDR filter. name column psms(msnid). Currently, \"peptide\" \"accession\" supported. added level SiteID makes sense PTM data first requires mapping modification site using MSnID::map_mod_sites. filtering_criterion (character) One \"evalue\" expectation value \"pp_prob\" - peptide prophet probability. Default \"pp_prob\". fdr.max (numeric) Maximum acceptable FDR. Default 0.01 (1%). n.iter.grid (numeric) number grid-distributed evaluation points. n.iter.nm (numeric) number iterations Nelder-Mead optimization algorithm. ... arguments passed filter_msfragger_data.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msfragger_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering msfragger Data — filter_msfragger_data","text":"(MSnID object) filtered msfragger output","code":""},{"path":[]},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msgf_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering MSGF Data — filter_msgf_data","title":"Filtering MSGF Data — filter_msgf_data","text":"Filtering MSGF data. implementation, peptide-level filter optimizes ppm PepQValue thresholds achieve maximum number peptide identifications within given FDR constraint. accession-level filter optimizes based peptides_per_1000aa, compute_num_peptides_per_1000aa must used first.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msgf_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering MSGF Data — filter_msgf_data","text":"","code":"filter_msgf_data(   msnid,   level,   fdr.max = 0.01,   n.iter.grid = 500,   n.iter.nm = 100 )  filter_msgf_data_peptide_level(msnid, ...)  filter_msgf_data_protein_level(msnid, ...)  filter_msgf_data_SiteID_level(msnid, ...)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msgf_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering MSGF Data — filter_msgf_data","text":"msnid (MSnID object) collated MSGF output level (character) Level perform FDR filter. name column psms(msnid). Currently, \"peptide\" \"accession\" supported. added level SiteID makes sense PTM data first requires mapping modification site using MSnID::map_mod_sites. fdr.max (numeric) Maximum acceptable FDR. Default 0.01 (1%). n.iter.grid (numeric) number grid-distributed evaluation points. n.iter.nm (numeric) number iterations Nelder-Mead optimization algorithm. ... arguments passed filter_msgf_data.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msgf_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering MSGF Data — filter_msgf_data","text":"(MSnID object) filtered MSGF output","code":""},{"path":[]},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msgf_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filtering MSGF Data — filter_msgf_data","text":"","code":"if (FALSE) { path_to_MSGF_results <- system.file(\"extdata/global/msgf_output\",                                     package = \"PlexedPiperTestData\") msnid <- read_msgf_data(path_to_MSGF_results) msnid <- MSnID::correct_peak_selection(msnid) show(msnid) msnid <- filter_msgf_data(msnid, \"peptide\", 0.01) # 1% FDR at peptide level show(msnid) path_to_FASTA <- system.file(   \"extdata/Rattus_norvegicus_NCBI_RefSeq_2018-04-10.fasta.gz\",   package = \"PlexedPiperTestData\" ) msnid <- compute_num_peptides_per_1000aa(msnid, path_to_FASTA) msnid <- filter_msgf_data(msnid, \"accession\", 0.01) # 1% FDR at protein level show(msnid) }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msgf_data_missed_cleavages.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering MSGF Data — filter_msgf_data_missed_cleavages","title":"Filtering MSGF Data — filter_msgf_data_missed_cleavages","text":"Filtering MSGF data number missed cleavages.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msgf_data_missed_cleavages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering MSGF Data — filter_msgf_data_missed_cleavages","text":"","code":"filter_msgf_data_missed_cleavages(msnid, missed_cleavages_threshold = 2)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msgf_data_missed_cleavages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering MSGF Data — filter_msgf_data_missed_cleavages","text":"msnid (MSnID object) collated MSGF output missed_cleavages_threshold (numeric) Maximum acceptable number missed cleavages. Default 2.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msgf_data_missed_cleavages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering MSGF Data — filter_msgf_data_missed_cleavages","text":"(MSnID object) filtered MSGF output","code":""},{"path":[]},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/filter_msgf_data_missed_cleavages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filtering MSGF Data — filter_msgf_data_missed_cleavages","text":"","code":"if (FALSE) { path_to_MSGF_results <- system.file(\"extdata/global/msgf_output\",                                     package = \"PlexedPiperTestData\") msnid <- read_msgf_data(path_to_MSGF_results) msnid <- MSnID::correct_peak_selection(msnid) show(msnid) # At most 2 missed cleavages msnid <-  filter_msgf_data_missed_cleavages(msnid, 2) show(msnid) }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/motrpac_bic_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Tables for BIC — motrpac_bic_output","title":"Format Tables for BIC — motrpac_bic_output","text":"Assembles data format compliant BIC requirements. Used internally run_plexedpiper.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/motrpac_bic_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Tables for BIC — motrpac_bic_output","text":"","code":"make_rii_peptide_gl(   msnid,   masic_data,   fractions,   samples,   references,   annotation,   org_name = \"Rattus norvegicus\",   fasta_file )  make_results_ratio_gl(   msnid,   masic_data,   fractions,   samples,   references,   annotation,   org_name = \"Rattus norvegicus\",   sep = \"_\",   fasta_file )  make_rii_peptide_ph(   msnid,   masic_data,   fractions,   samples,   references,   annotation,   org_name = \"Rattus norvegicus\",   sep = \"_\",   fasta_file )  make_results_ratio_ph(   msnid,   masic_data,   fractions,   samples,   references,   annotation,   org_name = \"Rattus norvegicus\",   sep = \"_\",   fasta_file )  assess_redundant_protein_matches(msnid, collapse = \"|\")  assess_noninferable_proteins(msnid, collapse = \"|\")"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/motrpac_bic_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Tables for BIC — motrpac_bic_output","text":"msnid (MSnID object) final filtered version MSnID object masic_data (object coercible data.table) final filtered version MASIC table fractions (object coercible data.table) study design table linking Dataset PlexID samples (object coercible data.table) study design table linking sample names TMT channels PlexID references (object coercible data.table) study design table describing reference value calculation annotation (character) format accessions(msnid). Either \"refseq\", \"uniprot\", \"gencode\" (case insensitive). org_name (character) scientific name organism (e.g., \"Homo sapiens\", \"Rattus norvegicus\", \"Mus musculus\", etc.). Case sensitive. fasta_file (character) Path FASTA file sep (character) used concatenate protein, SiteID, peptide. collapse (character) used collapse proteins assess_redundant_protein_matches","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/motrpac_bic_output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format Tables for BIC — motrpac_bic_output","text":"ratio rii functions require columns \"redundantAccessions\", \"noninferableProteins\" \"percentAACoverage\" (created compute_accession_coverage) present psms(msnid). make_rii_peptide_gl: returns 'RII_peptide.txt' table (global) make_results_ratio_gl: returns 'results_ratio.txt' table (global) make_rii_peptide_ph: returns 'RII_peptide.txt' table (phospho) make_results_ratio_ph: returns 'results_ratio.txt' table (phospho) assess_redundant_protein_matches: appends proteins matched multiple peptides. Creates \"redundantAccessions\" column psms(msnid). assess_noninferable_proteins: appends proteins identical peptide sets. Creates \"noninferableProteins\" column psms(msnid).","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/motrpac_bic_output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Tables for BIC — motrpac_bic_output","text":"","code":"if (FALSE) { # Prepare MS/MS IDs ---- path_to_MSGF_results <- system.file(\"extdata/global/msgf_output\",                                     package = \"PlexedPiperTestData\") msnid <- read_msgf_data(path_to_MSGF_results) msnid <- MSnID::correct_peak_selection(msnid) show(msnid) msnid <- filter_msgf_data_peptide_level(msnid, 0.01) show(msnid) path_to_FASTA <- system.file(   \"extdata/Rattus_norvegicus_NCBI_RefSeq_2018-04-10.fasta.gz\",   package = \"PlexedPiperTestData\" ) msnid <- compute_num_peptides_per_1000aa(msnid, path_to_FASTA) msnid <- filter_msgf_data_protein_level(msnid, 0.01) show(msnid) msnid <- assess_redundant_protein_matches(msnid) msnid <- assess_noninferable_proteins(msnid) fst <- Biostrings::readAAStringSet(path_to_FASTA) names(fst) <- gsub(\" .*\", \"\", names(fst)) # make names match accessions msnid <- MSnID::compute_accession_coverage(msnid, fst) head(psms(msnid))  # Prepare table with reporter ion intensities ---- path_to_MASIC_results <- system.file(\"extdata/global/masic_output\",                                      package = \"PlexedPiperTestData\") masic_data <- read_masic_data(path_to_MASIC_results,                               interference_score = TRUE) masic_data <- filter_masic_data(masic_data, 0.5, 0)  # Read study design files ---- library(readr) fractions <- read_tsv(system.file(\"extdata/study_design/fractions.txt\",                                   package = \"PlexedPiperTestData\")) samples <- read_tsv(system.file(\"extdata/study_design/samples.txt\",                                 package = \"PlexedPiperTestData\")) references <- read_tsv(system.file(\"extdata/study_design/references.txt\",                                    package = \"PlexedPiperTestData\"))  # Create final tables ---- results_ratio <- make_results_ratio_gl(msnid, masic_data,                                        fractions, samples, references,                                        annotation = \"RefSeq\",                                        org_name = \"Rattus norvegicus\",                                        fasta_file = path_to_FASTA) head(results_ratio, 10)  rii_peptide <- make_rii_peptide_gl(msnid, masic_data,                                    fractions, samples, references,                                    annotation = \"RefSeq\",                                    org_name = \"Rattus norvegicus\",                                    fasta_file = path_to_FASTA) head(rii_peptide, 10)  # Clean-up cache unlink(\".Rcache\", recursive = TRUE) }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_AScore_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Read AScore results from folder — read_AScore_results","title":"Read AScore results from folder — read_AScore_results","text":"function reads AScore results local folder.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_AScore_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read AScore results from folder — read_AScore_results","text":"","code":"read_AScore_results(path_to_AScore_results)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_AScore_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read AScore results from folder — read_AScore_results","text":"path_to_AScore_results (character) path folder containing file ending \"_syn_ascore.txt\".","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_AScore_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read AScore results from folder — read_AScore_results","text":"data.frame AScore results","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_AScore_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read AScore results from folder — read_AScore_results","text":"","code":"if (FALSE) { # Get AScore results path_to_AScore_results <- system.file(\"extdata/phospho/ascore_output\",                                       package = \"PlexedPiperTestData\") ascore <- read_AScore_results(path_to_AScore_results) }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_masic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Reading MASIC Results. Generic. — read_masic_data","title":"Reading MASIC Results. Generic. — read_masic_data","text":"Reading MASIC output single directory","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_masic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reading MASIC Results. Generic. — read_masic_data","text":"","code":"read_masic_data(path_to_MASIC_results, interference_score = FALSE)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_masic_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reading MASIC Results. Generic. — read_masic_data","text":"path_to_MASIC_results (character) path directory MASIC results datasets. interference_score (logical) whether read interference score.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_masic_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reading MASIC Results. Generic. — read_masic_data","text":"(data.frame) reporter ion intensities metrics.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_masic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reading MASIC Results. Generic. — read_masic_data","text":"","code":"if (FALSE) { path_to_MASIC_results <- system.file(\"extdata/global/masic_output\",                                      package = \"PlexedPiperTestData\") x <- read_masic_data(path_to_MASIC_results, interference_score=TRUE) head(x) }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_msgf_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Reading MS-GF+ Results. Generic. — read_msgf_data","title":"Reading MS-GF+ Results. Generic. — read_msgf_data","text":"Reading MS-GF+ output single directory.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_msgf_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reading MS-GF+ Results. Generic. — read_msgf_data","text":"","code":"read_msgf_data(   path_to_MSGF_results,   suffix = character(0),   use_mzIdentML = FALSE )"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_msgf_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reading MS-GF+ Results. Generic. — read_msgf_data","text":"path_to_MSGF_results (character) path directory MSGF results datasets. suffix (character) optional file suffix. Either \"_msgfplus_syn.txt\", \"_msgfdb_syn.txt\", \"_syn.txt\". use_mzIdentML (logical) whether read mzIdentML files psms data.table slot MSnID.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_msgf_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reading MS-GF+ Results. Generic. — read_msgf_data","text":"(MSnID) MSnID object","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_msgf_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reading MS-GF+ Results. Generic. — read_msgf_data","text":"","code":"if (FALSE) { path_to_MSGF_results <- system.file(\"extdata/global/msgf_output\",                                     package = \"PlexedPiperTestData\") msnid <- read_msgf_data(path_to_MSGF_results) print(msnid) head(MSnID::psms(msnid)) }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_study_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilities for reading study design files. — read_study_design","title":"Utilities for reading study design files. — read_study_design","text":"Fetches study design results local folder. Checks study design files internally consistent.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_study_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilities for reading study design files. — read_study_design","text":"","code":"read_study_design(path_to_study_design, prefix = character(0))"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_study_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilities for reading study design files. — read_study_design","text":"path_to_study_design (character) path folder containing study design files. prefix (character) optional prefix study design tables.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_study_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utilities for reading study design files. — read_study_design","text":"list study design tables, accessible $ [].","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/read_study_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utilities for reading study design files. — read_study_design","text":"","code":"path_to_study_design <- system.file(\"extdata/study_design\",                                     package = \"PlexedPiperTestData\") study_design <- read_study_design(path_to_study_design)  fractions  <- study_design$fractions samples    <- study_design$samples references <- study_design$references"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/remap_accessions.html","id":null,"dir":"Reference","previous_headings":"","what":"Remap accessions — remap_accessions","title":"Remap accessions — remap_accessions","text":"Converting accessions RefSeq Gene. conversion_table supplied, function leverages fetch_conversion_table.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/remap_accessions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remap accessions — remap_accessions","text":"","code":"remap_accessions_refseq_to_gene(msnid, organism_name, conversion_table)  remap_accessions_uniprot_to_gene(msnid, organism_name, conversion_table)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/remap_accessions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remap accessions — remap_accessions","text":"msnid (MSnID object) MS/MS ID data organism_name (character) Scientific name organism. conversion_table (data.frame) Optional data.frame two columns. One column match accessions `msnid` object (e.g. RefSeq). column alternate annotation map (e.g. gene symbol).","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/remap_accessions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remap accessions — remap_accessions","text":"(MSnID object) MS/MS ID data computed number peptides per   1000 aa. Added column name - \"peptides_per_1000aa\".","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/remap_accessions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remap accessions — remap_accessions","text":"","code":"if (FALSE) { path_to_MSGF_results <- system.file(\"extdata/global/msgf_output\",                                     package = \"PlexedPiperTestData\") msnid <- read_msgf_data(path_to_MSGF_results) show(msnid) msnid <- remap_accessions_refseq_to_gene(msnid,                                          organism_name=\"Rattus norvegicus\") show(msnid) }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/remap_accessions_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Remap Sequence IDs in FASTA File — remap_accessions_fasta","title":"Remap Sequence IDs in FASTA File — remap_accessions_fasta","text":"functions remap IDs FASTA file RefSeq IDs UniProt accessions Gene symbols. single gene matches one protein sequence, longest sequence retained.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/remap_accessions_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remap Sequence IDs in FASTA File — remap_accessions_fasta","text":"","code":"remap_accessions_refseq_to_gene_fasta(   path_to_FASTA,   organism_name,   conversion_table )  remap_accessions_uniprot_to_gene_fasta(path_to_FASTA)"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/remap_accessions_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remap Sequence IDs in FASTA File — remap_accessions_fasta","text":"path_to_FASTA (character) path FASTA file. organism_name (character) scientific name organism (e.g. \"Homo sapiens\", \"Rattus norvegicus\", \"Mus musculus\", etc.). required conversion_table supplied. conversion_table (data.frame) optional data frame two columns: REFSEQ UNIPROT SYMBOL (order). provided, created fetch_conversion_table.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/remap_accessions_fasta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remap Sequence IDs in FASTA File — remap_accessions_fasta","text":"Path remapped FASTA file.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/remap_accessions_fasta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remap Sequence IDs in FASTA File — remap_accessions_fasta","text":"","code":"if (FALSE) { path_to_FASTA <- system.file(   \"extdata/Rattus_norvegicus_NCBI_RefSeq_2018-04-10.fasta.gz\",   package = \"PlexedPiperTestData\" ) temp_work_dir <- tempdir() # can be set to \".\" or getwd(), if done carefully file.copy(path_to_FASTA, temp_work_dir) path_to_FASTA <- file.path(temp_work_dir, basename(path_to_FASTA)) library(Biostrings) readAAStringSet(path_to_FASTA) # RefSeq IDs path_to_new_FASTA <- remap_accessions_refseq_to_gene_fasta(   path_to_FASTA, organism_name = \"Rattus norvegicus\" ) readAAStringSet(path_to_new_FASTA) # gene symbols }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/reporter_converter.html","id":null,"dir":"Reference","previous_headings":"","what":"Converter for TMT Reporter Channels — reporter_converter","title":"Converter for TMT Reporter Channels — reporter_converter","text":"Converter human-readable notation TMT reporter channels m/z-type (reported MASIC).","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/reporter_converter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converter for TMT Reporter Channels — reporter_converter","text":"","code":"reporter_converter"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/reporter_converter.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Converter for TMT Reporter Channels — reporter_converter","text":"data frame 10 rows 2 variables: ReporterName human-readable notation ReporterIon reporter channel names extracted MASIC","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/reporter_converter.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Converter for TMT Reporter Channels — reporter_converter","text":"https://www.thermofisher.com/us/en/home/life-science/protein-biology/protein-mass-spectrometry-analysis/protein-quantitation-mass-spectrometry/tandem-mass-tag-systems.html","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/run_plexedpiper.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for PlexedPiper — run_plexedpiper","title":"Wrapper for PlexedPiper — run_plexedpiper","text":"wrapper function PlexedPiper performs steps necessary go MS-GF+ MASIC data Reporter Ion Intensity (RII) Ratio Results tables used MoTrPAC Bioinformatics Center (BIC).","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/run_plexedpiper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for PlexedPiper — run_plexedpiper","text":"","code":"run_plexedpiper(   msgf_output_folder,   fasta_file,   masic_output_folder,   ascore_output_folder = NULL,   proteomics,   study_design_folder,   prefix = character(0),   species,   annotation,   file_prefix = NULL,   unique_only = FALSE,   global_results = NULL,   refine_prior = FALSE,   write_results_to_file = TRUE,   output_folder = NULL,   save_env = FALSE,   return_results = FALSE,   verbose = TRUE )"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/run_plexedpiper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for PlexedPiper — run_plexedpiper","text":"msgf_output_folder (character) Path MS-GF+ results folder(s). fasta_file (character) Path FASTA file. multiple MS-GF+ results folders provided, searched protein database. masic_output_folder (character) MASIC results folder(s). ascore_output_folder (character) AScore results folder(s). proteomics (character) Either \"pr\" - proteomics, \"ph\" - phosphoproteomics, \"ub\" - ubiquitinomics, \"ac\" - acetylomics. study_design_folder (character) Folder containing three study design tables: fractions.txt, samples.txt, references.txt. prefix (character) optional prefix study design tables. species (character) Scientific name species (e.g. \"Rattus norvegicus\", \"Homo sapiens\", etc.). annotation (character) Source annotations: either RefSeq, UniProt, Gencode (case insensitive). file_prefix (character) Prefix file name outputs. unique_only (logical) Whether discard peptides match multiple proteins parsimonious protein inference step. Default FALSE. global_results (character) PTM experiments. Ratio results global protein abundance experiment. provided, prioritized inference performed. Otherwise, parsimonious inference performed without prior. See infer_parsimonious_accessions details. refine_prior (logical) FALSE (default), peptides allowed match multiple proteins prior. , greedy set cover algorithm applied set proteins prior. TRUE, algorithm applied prior non-prior sets separately combining. See infer_parsimonious_accessions details. write_results_to_file (logical) Whether write results files. output_folder (character) Output folder name save results. provided, save current directory. save_env (logical) Whether save R environment output folder. return_results (logical) Whether return ratio rii results. verbose (logical) Whether show messages describing steps.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/run_plexedpiper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for PlexedPiper — run_plexedpiper","text":"(list) return_results TRUE, returns list ratio RII data frames.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/reference/run_plexedpiper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for PlexedPiper — run_plexedpiper","text":"","code":"if (FALSE) { # Example with pseudo-paths results <- run_plexedpiper(msgf_output_folder = \"~/path/to/msgfplus/\",                            fasta_file  = \"~/path/to/fasta/sequence.fasta\",                            masic_output_folder = \"~/path/to/masic-results/\",                            ascore_output_folder = \"~/path/to/ascore-results/\",                            proteomics = \"ph\",                            study_design_folder = \"~/path/to/study-design/\",                            species = \"Rattus norvegicus\",                            annotation = \"RefSeq\",                            global_results = \"~/path/to/global/ratio.txt\",                            unique_only = FALSE,                            refine_prior = FALSE,                            output_folder = \"~/path/to/pp-results/\",                            file_prefix = \"msgfplus-pp-results\",                            return_results = TRUE,                            verbose = TRUE) }"},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/news/index.html","id":"plexedpiper-041-2023-02-07","dir":"Changelog","previous_headings":"","what":"PlexedPiper 0.4.1 (2023-02-07)","title":"PlexedPiper 0.4.1 (2023-02-07)","text":"Removed duplicate GENCODE protein IDs run_plexedpiper output. GENCODE IDs currently unique combining protein (ENSP) transcript (ENST) IDs. Since duplicates, remove rather concatenating IDs “protein_id” column output make_results_ratio_* make_rii_peptide_* functions. Shortened UniProt headers run_plexedpiper output use middle portion UniProt IDs. Bugfix: fixed parsing crosstab rownames make_rii_peptide_ph acetylated peptides also contain PTMs denoted “@”. Requires update version MSnID built 2023-01-26 column “unique_id” added parse_FASTA_names output.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/news/index.html","id":"plexedpiper-040-2023-01-09","dir":"Changelog","previous_headings":"","what":"PlexedPiper 0.4.0 (2023-01-09)","title":"PlexedPiper 0.4.0 (2023-01-09)","text":"Updated MoTrPAC BIC functions extract information GENCODE FASTA headers include columns results tables. Added checks create_crosstab input. Updated run_plexedpiper accept multiple folder paths. Now capable integrating multiple datasets, MoTrPAC PASS1A/1C. Updated handling UniProt--gene conversion make_rii_peptide_* make_results_ratio_* functions. Now uses gene symbols FASTA header AnnotationDbi Bioconductor package convert Entrez gene IDs, rather converting protein gene symbol Entrez gene. Added “pkgdown” GitHub Action automatically build website.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/news/index.html","id":"plexedpiper-036-2022-07-01","dir":"Changelog","previous_headings":"","what":"PlexedPiper 0.3.6 (2022-07-01)","title":"PlexedPiper 0.3.6 (2022-07-01)","text":"Added use_mzIdentML argument read_msgf_data read mzid files local folder. Added prefix argument read_study_design run_plexedpiper. Expanded functionality filter_msgf_data allow filtering SiteID level. performs optimization procedure filtering peptide level. Also added filter_msgf_data_SiteID_level wrapper.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/news/index.html","id":"plexedpiper-035-2022-05-04","dir":"Changelog","previous_headings":"","what":"PlexedPiper 0.3.5 (2022-05-04)","title":"PlexedPiper 0.3.5 (2022-05-04)","text":"Added unique_only refine_prior arguments run_plexedpiper. Requires update version MSnID built 2022-04-26–refine_prior argument added infer_parsimonious_accessions. Minor documentation changes.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/news/index.html","id":"plexedpiper-034-2022-04-15","dir":"Changelog","previous_headings":"","what":"PlexedPiper 0.3.4 (2022-04-15)","title":"PlexedPiper 0.3.4 (2022-04-15)","text":"Added NEWS file. Added website built pkgdown package.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/news/index.html","id":"plexedpiper-033-2022-04-14","dir":"Changelog","previous_headings":"","what":"PlexedPiper 0.3.3 (2022-04-14)","title":"PlexedPiper 0.3.3 (2022-04-14)","text":"Added run_plexedpiper wrapper function, performs steps necessary go MS-GF+ MASIC data Reporter Ion Intensity (RII) Ratio Results tables used MoTrPAC Bioinformatics Center (BIC).","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/news/index.html","id":"plexedpiper-032-2022-04-13","dir":"Changelog","previous_headings":"","what":"PlexedPiper 0.3.2 (2022-04-13)","title":"PlexedPiper 0.3.2 (2022-04-13)","text":"Added TMT6 TMT18 tables reporter_converter. Removed functions previously migrated PNNL.DMS.utils switch v0.3.0. Reduced computation time memory usage filter_msgf_data. added benefit increasing precision optimization algorithms. result, filtered MSnIDs may marginally different. Added UniProt support MoTrPAC BIC functions. Fixed check issues.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/news/index.html","id":"plexedpiper-031-2021-09-22","dir":"Changelog","previous_headings":"","what":"PlexedPiper 0.3.1 (2021-09-22)","title":"PlexedPiper 0.3.1 (2021-09-22)","text":"Removed odbc package imports. Leftover changes v0.3.0.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/news/index.html","id":"plexedpiper-030-2021-09-16","dir":"Changelog","previous_headings":"","what":"PlexedPiper 0.3.0 (2021-09-16)","title":"PlexedPiper 0.3.0 (2021-09-16)","text":"Migrated DMS-related tools PNNL.DMS.utils.","code":""},{"path":"https://pnnl-comp-mass-spec.github.io/PlexedPiper/news/index.html","id":"plexedpiper-020-2021-06-07","dir":"Changelog","previous_headings":"","what":"PlexedPiper 0.2.0 (2021-06-07)","title":"PlexedPiper 0.2.0 (2021-06-07)","text":"First release since migration vladpetyuk/PlexedPiper. Updated read_study_design.","code":""}]
